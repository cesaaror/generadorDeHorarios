generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())

  employees Employee[] // üí° Relaci√≥n normal sin `onDelete`
}

model Employee {
  id        Int      @id @default(autoincrement())
  name      String
  phone     String   @unique
  role      Role
  shift     Shift
  dayOff    String?
  createdAt DateTime @default(now())

  userId    Int      
  user      User @relation(fields: [userId], references: [id], onDelete: Cascade) // ‚úÖ Se mueve `onDelete: Cascade` aqu√≠

  schedules Schedule[]

  // üî• √çndice para mejorar la b√∫squeda por usuario
  @@index([userId])
}

model Schedule {
  id         Int      @id @default(autoincrement())
  employeeId Int
  employee   Employee @relation(fields: [employeeId], references: [id])
  date       DateTime
  shift      Shift
  role       Role     @default(REPONEDOR) // üî• Asignar un rol por defecto
  // üî• √çndice para mejorar la b√∫squeda por empleado
  @@index([employeeId])
}

enum Role {
  CAJERO
  REPONEDOR
  CARNICERO
  CHARCUTERO
  PESCADERO
  PANADERO
  ENCARGADO
}

enum Shift {
  MA√ëANA
  TARDE
}
